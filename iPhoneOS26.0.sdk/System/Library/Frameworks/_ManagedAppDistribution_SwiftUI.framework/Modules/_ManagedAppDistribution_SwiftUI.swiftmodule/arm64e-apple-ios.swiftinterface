// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.2 effective-5.10 (swiftlang-6.2.0.17.14 clang-1700.3.17.1)
// swift-module-flags: -target arm64e-apple-ios26.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -package-name _ManagedAppDistribution_SwiftUI -enable-upcoming-feature StrictConcurrency -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -user-module-version 3.0.12 -module-name _ManagedAppDistribution_SwiftUI
// swift-module-flags-ignorable:  -formal-cxx-interoperability-mode=off -interface-compiler-version 6.2
import Combine
import ExtensionKit
import Foundation
@_exported import ManagedAppDistribution
import Observation
import Swift
import SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@available(iOS 17.2, macOS 26.0, macCatalyst 26.0, visionOS 26.4, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
public struct ManagedContentStyle {
  @available(iOS 17.2, macOS 26.0, macCatalyst 26.0, visionOS 26.4, *)
  @available(tvOS, unavailable)
  @available(watchOS, unavailable)
  public static var automatic: _ManagedAppDistribution_SwiftUI.ManagedContentStyle {
    get
  }
  @available(iOS 17.2, macOS 26.0, macCatalyst 26.0, *)
  @available(tvOS, unavailable)
  @available(watchOS, unavailable)
  @available(visionOS, unavailable)
  public static var compact: _ManagedAppDistribution_SwiftUI.ManagedContentStyle {
    get
  }
  @available(iOS 17.2, macOS 26.0, macCatalyst 26.0, visionOS 26.4, *)
  @available(tvOS, unavailable)
  @available(watchOS, unavailable)
  public static var header: _ManagedAppDistribution_SwiftUI.ManagedContentStyle {
    get
  }
  @available(macOS 26.0, macCatalyst 26.0, visionOS 26.4, *)
  @available(iOS, unavailable)
  @available(tvOS, unavailable)
  @available(watchOS, unavailable)
  public static var vertical: _ManagedAppDistribution_SwiftUI.ManagedContentStyle {
    get
  }
}
@available(iOS 17.2, macOS 26.0, macCatalyst 26.0, visionOS 26.4, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
public struct ManagedContentOfferState : Swift.Hashable {
  public static var neverInstalled: _ManagedAppDistribution_SwiftUI.ManagedContentOfferState {
    get
  }
  public static var notInstalled: _ManagedAppDistribution_SwiftUI.ManagedContentOfferState {
    get
  }
  public static var installed: _ManagedAppDistribution_SwiftUI.ManagedContentOfferState {
    get
  }
  public static var noninteractive: _ManagedAppDistribution_SwiftUI.ManagedContentOfferState {
    get
  }
  #if compiler(>=5.3) && $NonescapableTypes
  public static func installing(progress: Swift.Double?) -> _ManagedAppDistribution_SwiftUI.ManagedContentOfferState
  #endif
  public static func custom(title: Swift.String) -> _ManagedAppDistribution_SwiftUI.ManagedContentOfferState
  public static func == (a: _ManagedAppDistribution_SwiftUI.ManagedContentOfferState, b: _ManagedAppDistribution_SwiftUI.ManagedContentOfferState) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@available(iOS 17.2, macOS 26.0, macCatalyst 26.0, visionOS 26.4, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@_Concurrency.MainActor @preconcurrency public struct ManagedAppView : SwiftUICore.View {
  nonisolated public init(app: ManagedAppDistribution.ManagedApp)
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  @available(iOS 17.2, visionOS 26.4, macOS 26.0, macCatalyst 26.0, *)
  @available(tvOS, unavailable)
  @available(watchOS, unavailable)
  public typealias Body = @_opaqueReturnTypeOf("$s31_ManagedAppDistribution_SwiftUI0aB4ViewV4bodyQrvp", 0) __
}
@available(iOS 17.2, macOS 26.0, macCatalyst 26.0, visionOS 26.4, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@_Concurrency.MainActor public struct ManagedContentView<Icon> : SwiftUICore.View where Icon : SwiftUICore.View {
  @_Concurrency.MainActor public init(primaryLabel: SwiftUICore.LocalizedStringKey, secondaryLabel: SwiftUICore.LocalizedStringKey = "", tertiaryLabel: SwiftUICore.LocalizedStringKey = "", quaternaryLabel: SwiftUICore.LocalizedStringKey = "", offerState: _ManagedAppDistribution_SwiftUI.ManagedContentOfferState, offerAction: @escaping (_ManagedAppDistribution_SwiftUI.ManagedContentOfferState) -> Swift.Void, @SwiftUICore.ViewBuilder icon: () -> Icon)
  @_disfavoredOverload @_Concurrency.MainActor public init(primaryLabel: any Swift.StringProtocol, secondaryLabel: any Swift.StringProtocol = "", tertiaryLabel: any Swift.StringProtocol = "", quaternaryLabel: any Swift.StringProtocol = "", offerState: _ManagedAppDistribution_SwiftUI.ManagedContentOfferState, offerAction: @escaping (_ManagedAppDistribution_SwiftUI.ManagedContentOfferState) -> Swift.Void, @SwiftUICore.ViewBuilder icon: () -> Icon)
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  @available(iOS 17.2, visionOS 26.4, macOS 26.0, macCatalyst 26.0, *)
  @available(tvOS, unavailable)
  @available(watchOS, unavailable)
  public typealias Body = @_opaqueReturnTypeOf("$s31_ManagedAppDistribution_SwiftUI0A11ContentViewV4bodyQrvp", 0) __<Icon>
}
@available(iOS 17.2, macOS 26.0, macCatalyst 26.0, visionOS 26.4, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
extension SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public func managedContentStyle(_ style: _ManagedAppDistribution_SwiftUI.ManagedContentStyle) -> some SwiftUICore.View
  
}
@available(iOS 17.2, macOS 26.0, macCatalyst 26.0, visionOS 26.4, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
extension _ManagedAppDistribution_SwiftUI.ManagedAppView : Swift.Sendable {}
@available(iOS 17.2, macOS 26.0, macCatalyst 26.0, visionOS 26.4, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
extension _ManagedAppDistribution_SwiftUI.ManagedContentView : Swift.Sendable {}
