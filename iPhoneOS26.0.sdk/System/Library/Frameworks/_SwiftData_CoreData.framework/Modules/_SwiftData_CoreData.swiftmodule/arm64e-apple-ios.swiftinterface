// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.2 effective-5.10 (swiftlang-6.2.0.17.14 clang-1700.3.17.1)
// swift-module-flags: -target arm64e-apple-ios26.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-experimental-feature VariadicGenerics -enable-experimental-feature ExtensionMacros -target-min-inlining-version min -enable-upcoming-feature InternalImportsByDefault -enable-upcoming-feature MemberImportVisibility -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -user-module-version 123 -module-name _SwiftData_CoreData
// swift-module-flags-ignorable:  -formal-cxx-interoperability-mode=off -interface-compiler-version 6.2
public import CoreData
public import Swift
@_exported public import SwiftData
public import _Concurrency
public import _StringProcessing
public import _SwiftConcurrencyShims
@available(swift 5.9)
@available(macOS 14, iOS 17, tvOS 17, watchOS 10, *)
extension CoreData.NSManagedObjectModel {
  #if compiler(>=5.3) && $NonescapableTypes
  @available(macOS, introduced: 14.0, deprecated: 26.0, message: "Utilize static `makeManagedObjectModel` instead")
  @available(iOS, introduced: 17.0, deprecated: 26.0, message: "Utilize static `makeManagedObjectModel` instead")
  @available(tvOS, introduced: 17.0, deprecated: 26.0, message: "Utilize static `makeManagedObjectModel` instead")
  @available(watchOS, introduced: 10.0, deprecated: 26.0, message: "Utilize static `makeManagedObjectModel` instead")
  @available(visionOS, introduced: 1.0, deprecated: 26.0, message: "Utilize static `makeManagedObjectModel` instead")
  @available(*, deprecated, message: "Utilize static `makeManagedObjectModel` instead")
  public func makeManagedObjectModel(for schema: SwiftData.Schema, mergedWith managedObjectModel: CoreData.NSManagedObjectModel? = nil) -> CoreData.NSManagedObjectModel?
  #endif
  #if compiler(>=5.3) && $NonescapableTypes
  public static func makeManagedObjectModel(for entityTypes: [any SwiftData.PersistentModel.Type], mergedWith managedObjectModel: CoreData.NSManagedObjectModel? = nil) -> CoreData.NSManagedObjectModel?
  #endif
  #if compiler(>=5.3) && $NonescapableTypes
  @available(macOS 26.0, iOS 26.0, tvOS 26.0, watchOS 26.0, visionOS 26.0, *)
  public static func makeManagedObjectModel(for entityTypes: any SwiftData.PersistentModel.Type..., mergedWith managedObjectModel: CoreData.NSManagedObjectModel? = nil) -> CoreData.NSManagedObjectModel?
  #endif
  #if compiler(>=5.3) && $NonescapableTypes
  @available(macOS 26.0, iOS 26.0, tvOS 26.0, watchOS 26.0, visionOS 26.0, *)
  public static func makeManagedObjectModel(for schema: SwiftData.Schema, mergedWith managedObjectModel: CoreData.NSManagedObjectModel? = nil) -> CoreData.NSManagedObjectModel?
  #endif
}
