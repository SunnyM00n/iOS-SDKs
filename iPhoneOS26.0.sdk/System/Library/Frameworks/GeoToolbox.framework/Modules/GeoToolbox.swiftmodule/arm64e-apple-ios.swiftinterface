// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.2 effective-5.10 (swiftlang-6.2.0.17.14 clang-1700.3.17.1)
// swift-module-flags: -target arm64e-apple-ios26.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -user-module-version 12.30.7.7.1 -module-name GeoToolbox
// swift-module-flags-ignorable:  -formal-cxx-interoperability-mode=off -interface-compiler-version 6.2
import Foundation
import Swift
import _Concurrency
@_exported import _LocationEssentials
import _StringProcessing
import _SwiftConcurrencyShims
@available(iOS 26.0, macOS 26.0, visionOS 26.0, watchOS 26.0, tvOS 26.0, *)
extension GeoToolbox.PlaceDescriptor {
  #if compiler(>=5.3) && $NonescapableTypes
  public var address: Swift.String? {
    get
  }
  #endif
  #if compiler(>=5.3) && $NonescapableTypes
  public var coordinate: _LocationEssentials.CLLocationCoordinate2D? {
    get
  }
  #endif
  #if compiler(>=5.3) && $NonescapableTypes
  public func serviceIdentifier(for serviceProvider: Swift.String) -> Swift.String?
  #endif
}
@available(iOS 26.0, macOS 26.0, visionOS 26.0, watchOS 26.0, tvOS 26.0, *)
public struct PlaceDescriptor : Swift.Sendable, Swift.Codable, Swift.Equatable {
  public enum PlaceRepresentation : Swift.Sendable, Swift.Codable, Swift.Equatable {
    case address(Swift.String)
    case coordinate(_LocationEssentials.CLLocationCoordinate2D)
    case deviceLocation(_LocationEssentials.CLLocation)
    public func encode(to encoder: any Swift.Encoder) throws
    public init(from decoder: any Swift.Decoder) throws
    public static func == (lhs: GeoToolbox.PlaceDescriptor.PlaceRepresentation, rhs: GeoToolbox.PlaceDescriptor.PlaceRepresentation) -> Swift.Bool
  }
  public enum SupportingPlaceRepresentation : Swift.Sendable, Swift.Codable, Swift.Equatable {
    case serviceIdentifiers([Swift.String : Swift.String])
    public static func == (lhs: GeoToolbox.PlaceDescriptor.SupportingPlaceRepresentation, rhs: GeoToolbox.PlaceDescriptor.SupportingPlaceRepresentation) -> Swift.Bool
    public func encode(to encoder: any Swift.Encoder) throws
    public init(from decoder: any Swift.Decoder) throws
  }
  #if compiler(>=5.3) && $NonescapableTypes
  public init(representations: [GeoToolbox.PlaceDescriptor.PlaceRepresentation], commonName: Swift.String?, supportingRepresentations: [GeoToolbox.PlaceDescriptor.SupportingPlaceRepresentation] = [])
  #endif
  public static func == (lhs: GeoToolbox.PlaceDescriptor, rhs: GeoToolbox.PlaceDescriptor) -> Swift.Bool
  public let commonName: Swift.String?
  public let representations: [GeoToolbox.PlaceDescriptor.PlaceRepresentation]
  public let supportingRepresentations: [GeoToolbox.PlaceDescriptor.SupportingPlaceRepresentation]
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
