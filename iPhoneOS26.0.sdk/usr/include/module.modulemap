// High level C interfaces.
extern module AppleTextureEncoder "AppleTextureEncoder.modulemap"
extern module asl "asl.modulemap"
extern module Compression "compression.modulemap"
extern module dnssd "dnssd.modulemap"
extern module ICU "unicode.modulemap"
extern module SQLite3 "SQLite3.modulemap"
extern module zlib "zlib.modulemap"

// Interfaces for interprocess communication.
extern module notify "notify.modulemap"
extern module XPC "xpc.modulemap"

// OS and kernel interfaces on top of Darwin/POSIX.
extern module Dispatch "dispatch.modulemap"
extern module DispatchIntrospection "dispatch.modulemap"
extern module libkern "libkern.modulemap"
extern module MachO "DarwinBasic.modulemap"
extern module os "os.modulemap"
extern module os_object "os.modulemap"
extern module os_workgroup "os.modulemap"

// General Objective-C interfaces.
extern module ObjectiveC "ObjectiveC.modulemap"

// General C interfaces (roughly POSIX/BSD).
extern module Darwin "Darwin.modulemap"

// Interfaces above the C standard library.
extern module libunwind "libunwind.modulemap"
extern module unwind_h "c_standard_library.modulemap"

// Interfaces above the C standard library that are used by libc++. When
// building with C++, these modules are intermingled with the libc++ and
// C standard library modules.
extern module nl_types "DarwinFoundation2.modulemap"
extern module pthread "DarwinFoundation3.modulemap"
extern module sched "DarwinFoundation3.modulemap"
extern module sys_select "DarwinFoundation3.modulemap"
extern module unistd "DarwinFoundation3.modulemap"
extern module xlocale "DarwinFoundation3.modulemap"

// C Standard Library. When building with C++, these modules will also
// import the corresponding C++ library modules.
extern module assert_h "c_standard_library.modulemap"
extern module complex_h "c_standard_library.modulemap"
extern module ctype_h "c_standard_library.modulemap"
extern module errno_h "c_standard_library.modulemap"
extern module fenv_h "c_standard_library.modulemap"
extern module float_h "c_standard_library.modulemap"
extern module inttypes_h "c_standard_library.modulemap"
extern module iso646_h "c_standard_library.modulemap"
extern module limits_h "c_standard_library.modulemap"
extern module locale_h "c_standard_library.modulemap"
extern module math_h "c_standard_library.modulemap"
extern module setjmp_h "c_standard_library.modulemap"
extern module signal_h "c_standard_library.modulemap"
extern module stdalign_h "c_standard_library.modulemap"
extern module stdarg_h "c_standard_library.modulemap"
extern module stdatomic_h "c_standard_library.modulemap"
extern module stdbool_h "c_standard_library.modulemap"
extern module stddef_h "c_standard_library.modulemap"
extern module stdint_h "c_standard_library.modulemap"
extern module stdio_h "c_standard_library.modulemap"
extern module stdlib_h "c_standard_library.modulemap"
extern module stdnoreturn_h "c_standard_library.modulemap"
extern module string_h "c_standard_library.modulemap"
extern module tgmath_h "c_standard_library.modulemap"
extern module time_h "c_standard_library.modulemap"
extern module wchar_h "c_standard_library.modulemap"
extern module wctype_h "c_standard_library.modulemap"

// Interfaces that are intermingled with the C standard library.
extern module alloca "DarwinFoundation2.modulemap"
extern module runetype "DarwinFoundation2.modulemap"
extern module sys_resource "DarwinFoundation3.modulemap"
extern module sys_types "DarwinFoundation2.modulemap"
extern module sys_wait "DarwinFoundation3.modulemap"

// Base interfaces below the C standard library.
extern module os_availability "DarwinFoundation1.modulemap"
extern module sys_appleapiopts "DarwinFoundation1.modulemap"
extern module sys_cdefs "DarwinFoundation1.modulemap"
extern module sys_qos "DarwinFoundation1.modulemap"
extern module TargetConditionals "DarwinFoundation1.modulemap"

// Cross import modules to support xlocale. These are imported automatically
// in Swift when the crossed modules are imported. e.g. when both ctype_h and
// xlocale are imported in Swift, _xlocale_ctype_h will automatically be imported.
// clang doesn't currently support cross imports; these modules can be imported
// directly instead.
extern module _Darwin_xlocale "DarwinBasic.modulemap"
extern module _xlocale_ctype_h "DarwinBasic.modulemap"
extern module _xlocale_inttypes_h "DarwinBasic.modulemap"
extern module _xlocale_stdio_h "DarwinBasic.modulemap"
extern module _xlocale_stdlib_h "DarwinBasic.modulemap"
extern module _xlocale_string_h "DarwinBasic.modulemap"
extern module _xlocale_time_h "DarwinBasic.modulemap"
extern module _xlocale_wchar_h "DarwinBasic.modulemap"
extern module _xlocale_wctype_h "DarwinBasic.modulemap"


// Implementation detail modules. The names and contents of these modules
// are not stable, and they should never be directly imported. The modules
// above should be used instead.
extern module unwind "libunwind.modulemap"

extern module _signal "c_standard_library.modulemap"

extern module _DarwinFoundation3 "DarwinFoundation3.modulemap"
extern module _DarwinFoundation2 "DarwinFoundation2.modulemap"
extern module _DarwinFoundation1 "DarwinFoundation1.modulemap"
extern module _AvailabilityInternal "DarwinFoundation1.modulemap"

// Obsolete C Standard Library headers replaced by the compiler. This module
// is here to generate early errors if client search paths are set up
// incorrectly.
extern module _c_standard_library_obsolete "DarwinFoundation1.modulemap"
