// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.2 effective-5.10 (swiftlang-6.2.0.17.14 clang-1700.3.17.1)
// swift-module-flags: -target arm64e-apple-ios26.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -user-module-version 505.0.13 -module-name NearbyInteraction
// swift-module-flags-ignorable:  -formal-cxx-interoperability-mode=off -interface-compiler-version 6.2
import Foundation
@_exported import NearbyInteraction
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@available(iOS 14.0, watchOS 7.3, tvOS 14.4, *)
@available(macOS, unavailable)
extension NearbyInteraction.NINearbyObject {
  #if compiler(>=5.3) && $NonescapableTypes
  public var distance: Swift.Float? {
    get
  }
  #endif
  #if compiler(>=5.3) && $NonescapableTypes
  public var direction: simd.simd_float3? {
    get
  }
  #endif
  #if compiler(>=5.3) && $NonescapableTypes
  @available(iOS 16.0, watchOS 9.0, tvOS 16.0, *)
  @available(macOS, unavailable)
  public var horizontalAngle: Swift.Float? {
    get
  }
  #endif
}
@available(iOS 16.0, watchOS 9.0, tvOS 16.0, *)
@available(macOS, unavailable)
public enum NIAlgorithmConvergenceStatus : Swift.Equatable {
  case unknown
  case notConverged([NearbyInteraction.NIAlgorithmConvergenceStatus.Reason])
  case converged
  public static func == (lhs: NearbyInteraction.NIAlgorithmConvergenceStatus, rhs: NearbyInteraction.NIAlgorithmConvergenceStatus) -> Swift.Bool
}
@available(iOS 16.0, watchOS 9.0, tvOS 16.0, *)
@available(macOS, unavailable)
extension NearbyInteraction.NIAlgorithmConvergenceStatus {
  @available(iOS 16.0, *)
  public struct Reason : Swift.Hashable, Swift.Equatable, Swift.RawRepresentable {
    public var rawValue: Swift.String
    public init(rawValue: Swift.String)
    #if compiler(>=5.3) && $NonescapableTypes
    public var localizedDescription: Swift.String? {
      get
    }
    #endif
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, *)
    @available(macOS, unavailable)
    public typealias RawValue = Swift.String
  }
}
@available(iOS 16.0, watchOS 9.0, *)
@available(macOS, unavailable)
@available(tvOS, unavailable)
extension NearbyInteraction.NIAlgorithmConvergenceStatus.Reason {
  public static let insufficientSignalStrength: NearbyInteraction.NIAlgorithmConvergenceStatus.Reason
  public static let insufficientHorizontalSweep: NearbyInteraction.NIAlgorithmConvergenceStatus.Reason
  public static let insufficientVerticalSweep: NearbyInteraction.NIAlgorithmConvergenceStatus.Reason
  public static let insufficientMovement: NearbyInteraction.NIAlgorithmConvergenceStatus.Reason
  public static let insufficientLighting: NearbyInteraction.NIAlgorithmConvergenceStatus.Reason
}
@available(iOS 16.0, watchOS 9.0, tvOS 16.0, *)
@available(macOS, unavailable)
extension NearbyInteraction.NIAlgorithmConvergence {
  public var status: NearbyInteraction.NIAlgorithmConvergenceStatus {
    get
  }
}
@available(iOS 16.0, *)
@available(watchOS, unavailable)
@available(tvOS, unavailable)
@available(macOS, unavailable)
extension NearbyInteraction.NISession {
  #if compiler(>=5.3) && $NonescapableTypes
  public func worldTransform(for object: NearbyInteraction.NINearbyObject) -> simd.simd_float4x4?
  #endif
}
