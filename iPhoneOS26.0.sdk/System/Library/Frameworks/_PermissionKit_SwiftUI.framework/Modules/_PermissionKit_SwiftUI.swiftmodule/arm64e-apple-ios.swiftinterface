// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.2 effective-5.10 (swiftlang-6.2.0.17.14 clang-1700.3.17.1)
// swift-module-flags: -target arm64e-apple-ios26.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -user-module-version 64.1 -module-name _PermissionKit_SwiftUI
// swift-module-flags-ignorable:  -formal-cxx-interoperability-mode=off -interface-compiler-version 6.2
@_exported import PermissionKit
import Swift
import SwiftUI
import _Concurrency
import _PermissionKit_UIKit
import _StringProcessing
import _SwiftConcurrencyShims
@available(iOS 26.0, visionOS 26.0, macOS 26.0, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@_Concurrency.MainActor @preconcurrency public struct CommunicationLimitsButton<Label> : SwiftUICore.View where Label : SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public let question: PermissionKit.PermissionQuestion<PermissionKit.CommunicationTopic>
  @_Concurrency.MainActor @preconcurrency public init(question: PermissionKit.PermissionQuestion<PermissionKit.CommunicationTopic>, @SwiftUICore.ViewBuilder label: @escaping () -> Label)
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  @available(iOS 26.0, visionOS 26.0, macOS 26.0, *)
  @available(tvOS, unavailable)
  @available(watchOS, unavailable)
  public typealias Body = @_opaqueReturnTypeOf("$s22_PermissionKit_SwiftUI25CommunicationLimitsButtonV4bodyQrvp", 0) __<Label>
}
@available(iOS 26.0, visionOS 26.0, macOS 26.0, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
extension _PermissionKit_SwiftUI.CommunicationLimitsButton : Swift.Sendable {}
