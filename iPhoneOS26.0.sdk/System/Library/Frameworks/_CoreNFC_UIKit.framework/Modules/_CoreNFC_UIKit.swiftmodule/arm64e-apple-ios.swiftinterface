// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.2 (swiftlang-6.2.0.17.14 clang-1700.3.17.1)
// swift-module-flags: -target arm64e-apple-ios26.0 -enable-objc-interop -enable-library-evolution -swift-version 6 -enforce-exclusivity=checked -O -library-level api -enable-experimental-feature DebugDescriptionMacro -user-module-version 360.40 -module-name _CoreNFC_UIKit
// swift-module-flags-ignorable:  -formal-cxx-interoperability-mode=off -interface-compiler-version 6.2
@_exported import CoreNFC
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@available(iOS 17.4, *)
@available(watchOS, unavailable)
@available(tvOS, unavailable)
@available(macOS, unavailable)
@available(visionOS, unavailable)
public enum NFCWindowSceneEvent : Swift.Hashable, Swift.Codable, Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
  case readerDetected
  case presentation
  public static func == (a: _CoreNFC_UIKit.NFCWindowSceneEvent, b: _CoreNFC_UIKit.NFCWindowSceneEvent) -> Swift.Bool
  public func encode(to encoder: any Swift.Encoder) throws
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
  public init(from decoder: any Swift.Decoder) throws
}
@available(iOS 17.4, *)
@available(watchOS, unavailable)
@available(tvOS, unavailable)
@available(macOS, unavailable)
@available(visionOS, unavailable)
public protocol NFCWindowSceneDelegate {
  func windowScene(_ windowScene: UIKit.UIWindowScene, didReceiveNFCWindowSceneEvent event: _CoreNFC_UIKit.NFCWindowSceneEvent)
}
@available(iOS 17.4, *)
@available(tvOS, unavailable)
@available(macOS, unavailable)
@available(visionOS, unavailable)
extension UIKit.UIScene.ConnectionOptions {
  #if compiler(>=5.3) && $NonescapableTypes
  @_Concurrency.MainActor @preconcurrency public var nfcEvent: _CoreNFC_UIKit.NFCWindowSceneEvent? {
    get
  }
  #endif
}
