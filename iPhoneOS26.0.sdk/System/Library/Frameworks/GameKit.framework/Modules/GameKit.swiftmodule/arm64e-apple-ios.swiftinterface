// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.2 (swiftlang-6.2.0.17.14 clang-1700.3.17.1)
// swift-module-flags: -target arm64e-apple-ios26.0 -enable-objc-interop -enable-library-evolution -swift-version 6 -enforce-exclusivity=checked -O -library-level api -enable-experimental-feature DebugDescriptionMacro -user-module-version 820.0.79.2.3 -module-name GameKit
// swift-module-flags-ignorable:  -formal-cxx-interoperability-mode=off -interface-compiler-version 6.2
import Combine
import Foundation
@_exported import GameKit
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import os
@available(iOS 26.0, macOS 26.0, *)
@available(tvOS, unavailable)
@available(visionOS, unavailable)
@available(watchOS, unavailable)
extension GameKit.GKAccessPoint {
  #if compiler(>=5.3) && $NonescapableTypes
  @objc(triggerAccessPointWithGameActivityDefinitionID:handler:) dynamic public func trigger(gameActivityDefinitionID: Swift.String, handler: (@Sendable () -> Swift.Void)? = nil)
  #endif
  #if compiler(>=5.3) && $NonescapableTypes
  @objc(triggerAccessPointWithGameActivity:handler:) dynamic public func trigger(gameActivity: GameKit.GKGameActivity, handler: (@Sendable () -> Swift.Void)? = nil)
  #endif
}
@available(iOS 26.0, macOS 26.0, tvOS 26.0, visionOS 26.0, *)
@available(watchOS, unavailable)
@objc extension GameKit.GKAccessPoint : @unchecked Swift.Sendable {
}
@available(iOS 26.0, macOS 26.0, tvOS 26.0, visionOS 26.0, *)
@available(watchOS, unavailable)
@objc extension GameKit.GKAchievement : @unchecked Swift.Sendable {
}
@available(iOS 26.0, macOS 26.0, tvOS 26.0, visionOS 26.0, *)
@available(watchOS, unavailable)
@objc extension GameKit.GKLeaderboardScore : @unchecked Swift.Sendable {
}
@available(iOS 26.0, macOS 26.0, tvOS 26.0, visionOS 26.0, *)
extension GameKit.GKGameActivityDefinition {
  #if compiler(>=5.3) && $NonescapableTypes
  final public var playerRange: (any Swift.RangeExpression)? {
    get
  }
  #endif
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension GameKit.GKAchievementDescription {
  #if compiler(>=5.3) && $NonescapableTypes
  public var rarityPercent: Swift.Double? {
    get
  }
  #endif
}
