// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.2 effective-5.10 (swiftlang-6.2.0.17.14 clang-1700.3.17.1)
// swift-module-flags: -target arm64e-apple-ios26.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -user-module-version 7622.1.19.2 -module-name BrowserEngineCore
// swift-module-flags-ignorable:  -formal-cxx-interoperability-mode=off -interface-compiler-version 6.2
import AVFoundation
@_exported import BrowserEngineCore
import Foundation
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@available(iOS 26.0, *)
@available(macOS, unavailable)
@available(watchOS, unavailable)
@available(tvOS, unavailable)
@available(visionOS, unavailable)
@objc(BEAudioSession) public class BEAudioSession : ObjectiveC.NSObject {
  @objc(initWithAudioSession:) public init(audioSession: AVFAudio.AVAudioSession)
  @objc(availableOutputs) public var availableOutputs: Swift.Array<AVFAudio.AVAudioSessionPortDescription> {
    @objc get
  }
  #if compiler(>=5.3) && $NonescapableTypes
  @objc(setPreferredOutput:error:) public func setPreferredOutput(_ outputPort: AVFAudio.AVAudioSessionPortDescription?) throws
  #endif
  #if compiler(>=5.3) && $NonescapableTypes
  @objc(preferredOutput) public var preferredOutput: AVFAudio.AVAudioSessionPortDescription? {
    @objc get
  }
  #endif
  @objc deinit
}
